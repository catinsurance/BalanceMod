local a={Item=Isaac.GetItemIdByName("Abel"),Familiar=Isaac.GetEntityVariantByName("Abel"),FireDelay=10,Damage=3.5,CainDamage=7.5,MaxDistance=100,EnemyTargetFlags=2|1,FrameInterval=13,DirectionOpposites={[Direction.DOWN]=Direction.UP,[Direction.UP]=Direction.DOWN,[Direction.LEFT]=Direction.RIGHT,[Direction.RIGHT]=Direction.LEFT},ChestPickup={[PickupVariant.PICKUP_CHEST]=true,[PickupVariant.PICKUP_REDCHEST]=true,[PickupVariant.PICKUP_SPIKEDCHEST]=true,[PickupVariant.PICKUP_MIMICCHEST]=true,[PickupVariant.PICKUP_WOODENCHEST]=true,[PickupVariant.PICKUP_OLDCHEST]=true},ValidPickup={[PickupVariant.PICKUP_COIN]=true,[PickupVariant.PICKUP_KEY]=true,[PickupVariant.PICKUP_BOMB]=true,[PickupVariant.PICKUP_PILL]=true,[PickupVariant.PICKUP_TRINKET]=true,[PickupVariant.PICKUP_TAROTCARD]=true},HeartsToChecks={[HeartSubType.HEART_BLACK]=function(b)return b:CanPickSoulHearts()end,[HeartSubType.HEART_DOUBLEPACK]=function(b)return b:CanPickRedHearts()end,[HeartSubType.HEART_FULL]=function(b)return b:CanPickRedHearts()end,[HeartSubType.HEART_HALF]=function(b)return b:CanPickRedHearts()end,[HeartSubType.HEART_SCARED]=function(b)return b:CanPickRedHearts()end,[HeartSubType.HEART_SOUL]=function(b)return b:CanPickSoulHearts()end,[HeartSubType.HEART_ETERNAL]=function(b)return true end,[HeartSubType.HEART_BLENDED]=function(b)return b:CanPickRedHearts()or b:CanPickSoulHearts()end,[HeartSubType.HEART_BONE]=function(b)return b:CanPickBoneHearts()end,[HeartSubType.HEART_ROTTEN]=function(b)return b:CanPickRottenHearts()end,[HeartSubType.HEART_GOLDEN]=function(b)return b:CanPickGoldenHearts()end}}function a:OnUpdate(c)local b=c.Player;local d=Game():GetRoom()local e=d:GetTopLeftPos()local f=d:GetBottomRightPos()local g=Vector((e.X+f.X)/2,(e.Y+f.Y)/2)local h=b.Position-g;c.Position=g-h;c.Velocity=Vector.Zero;local i=Isaac.FindInRadius(c.Position,5,EntityPartition.PICKUP)if#i>0 then for j,k in ipairs(i)do if k.Variant~=PickupVariant.PICKUP_COLLECTIBLE then local l=k:ToPickup()if a.ChestPickup[l.Variant]then l:PlayPickupSound()l:TryOpenChest(b)elseif a.ValidPickup[l.Variant]then l:PlayPickupSound()l.Position=b.Position elseif l.Variant==PickupVariant.PICKUP_GRAB_BAG then l:PlayPickupSound()l:TryOpenChest(b)l:Remove()elseif l.Variant==PickupVariant.PICKUP_HEART then if a.HeartsToChecks[l.SubType](b)then l:PlayPickupSound()l.Position=b.Position end elseif l.Variant==PickupVariant.PICKUP_LIL_BATTERY then if b:NeedsCharge()then l:PlayPickupSound()l.Position=b.Position end end end end end;if c.FrameCount%a.FireDelay==0 then local m=Isaac.FindInRadius(c.Position,a.MaxDistance,EntityPartition.ENEMY)if#m>0 then local n=a.MaxDistance;local o=nil;for j,p in ipairs(m)do if p:IsVulnerableEnemy()then local q=(p.Position-c.Position):Length()if q<n then n=q;o=p end end end;if not o then return end;local r=(o.Position-c.Position):Normalized()local s=c.Position-o.Position;local t=c:FireProjectile(r):ToTear()local u=b:GetPlayerType()==PlayerType.PLAYER_CAIN_B or b:GetPlayerType()==PlayerType.PLAYER_CAIN;if u then t:ChangeVariant(TearVariant.BLOOD)end;local v=Direction.NO_DIRECTION;if s.X>50 then v=Direction.LEFT elseif s.X<-50 then v=Direction.RIGHT elseif r.Y<0 then v=Direction.UP elseif r.Y>0 then v=Direction.DOWN end;c:PlayShootAnim(v)t.CollisionDamage=u and a.CainDamage or a.Damage;t.GridCollisionClass=EntityGridCollisionClass.GRIDCOLL_WALLS;t.Velocity=r*10 else c:PlayFloatAnim(a.DirectionOpposites[b:GetHeadDirection()])end end end;function a:OnCacheUpdate(b,w)if w==CacheFlag.CACHE_FAMILIARS then b:CheckFamiliar(a.Familiar,b:GetCollectibleNum(a.Item)+b:GetEffects():GetCollectibleEffectNum(a.Item),RNG(),Isaac.GetItemConfig():GetCollectible(a.Item))end end;return function(x)x:AddCallback(ModCallbacks.MC_FAMILIAR_UPDATE,a.OnUpdate,a.Familiar)x:AddCallback(ModCallbacks.MC_EVALUATE_CACHE,a.OnCacheUpdate)if EID then EID:addCollectible(a.Item,"Isaac gains a familiar that will mirror his movements#Automatically shoots at enemies nearby#Will retrieve pickups and open chests that it touches for the player#Can not open locked chests")end end